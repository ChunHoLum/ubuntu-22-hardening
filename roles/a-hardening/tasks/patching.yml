---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  become: yes

- name: Install unattended-upgrades package
  ansible.builtin.apt:
    name:
      - unattended-upgrades
      - apt-listchanges
    state: present
  become: yes

- name: Configure unattended-upgrades allowed origins
  ansible.builtin.lineinfile:
    path: '{{ security_baseline_unattended_upgrades_config }}'
    regexp: '^//?\s*"{{ item | regex_escape }}"'
    line: '        "{{ item }}";'
    insertafter: '^Unattended-Upgrade::Allowed-Origins'
    state: present
  become: yes
  loop: '{{ security_baseline_allowed_origins }}'
  notify: restart unattended-upgrades

- name: Configure automatic reboot if required
  ansible.builtin.lineinfile:
    path: '{{ security_baseline_unattended_upgrades_config }}'
    regexp: '^//?\s*Unattended-Upgrade::Automatic-Reboot\s'
    line: 'Unattended-Upgrade::Automatic-Reboot "{{ security_baseline_auto_reboot | lower }}";'
    state: present
  become: yes
  notify: restart unattended-upgrades

- name: Configure automatic reboot time
  ansible.builtin.lineinfile:
    path: '{{ security_baseline_unattended_upgrades_config }}'
    regexp: '^//?\s*Unattended-Upgrade::Automatic-Reboot-Time\s'
    line: 'Unattended-Upgrade::Automatic-Reboot-Time "{{ security_baseline_auto_reboot_time }}";'
    state: present
  become: yes
  when: security_baseline_auto_reboot | bool
  notify: restart unattended-upgrades

- name: Configure mail notifications
  ansible.builtin.lineinfile:
    path: '{{ security_baseline_unattended_upgrades_config }}'
    regexp: '^//?\s*Unattended-Upgrade::Mail\s'
    line: 'Unattended-Upgrade::Mail "{{ security_baseline_mail_report }}";'
    state: present
  become: yes
  notify: restart unattended-upgrades

- name: Configure mail only on error
  ansible.builtin.lineinfile:
    path: '{{ security_baseline_unattended_upgrades_config }}'
    regexp: '^//?\s*Unattended-Upgrade::MailOnlyOnError\s'
    line: 'Unattended-Upgrade::MailOnlyOnError "{{ security_baseline_mail_only_on_error | lower }}";'
    state: present
  become: yes
  notify: restart unattended-upgrades

- name: Enable automatic updates
  ansible.builtin.copy:
    content: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Download-Upgradeable-Packages "1";
      APT::Periodic::AutocleanInterval "7";
      APT::Periodic::Unattended-Upgrade "1";
    dest: '{{ security_baseline_auto_upgrades_config }}'
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Apply all available security updates immediately
  ansible.builtin.apt:
    upgrade: safe
    update_cache: true
  become: yes
  register: apt_upgrade_result
  when: security_baseline_apply_updates_now | bool

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required
  become: yes

- name: Display reboot requirement
  ansible.builtin.debug:
    msg: 'Reboot is required for kernel updates to take effect'
  when: reboot_required.stat.exists
